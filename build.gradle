plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.springframework.boot' version '3.2.0'
}

allprojects {
    group = 'ru.tdd'
    version = '1.0-SNAPSHOT'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    def securityProjects = ['app', 'user', 'security']

    def projectsWithDB = ['app', 'user', 'security', 'testing', 'common']

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.boot:spring-boot-testcontainers'
        testImplementation 'org.testcontainers:junit-jupiter'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        testImplementation 'org.junit.jupiter:junit-jupiter'
    }

    if (project.name in securityProjects) {
        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-security'
            testImplementation 'org.springframework.security:spring-security-test'
        }
    }

    if (project.name in projectsWithDB) {
        dependencies {
            implementation 'org.flywaydb:flyway-core:10.7.1'
            implementation 'org.flywaydb:flyway-database-postgresql:10.7.1'
            implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
            runtimeOnly 'org.postgresql:postgresql'
            testImplementation 'org.testcontainers:postgresql'
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

}